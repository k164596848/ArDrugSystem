;帳號是否上鎖(改31)
[isAccountLock] 
sql = "select * from user a where a.EMAIL = ? and a.LOCKED = '1'"

;登入驗證該帳號(改31)
[checkLoginAccount] 
sql = "select * from user a where a.EMAIL = ?"


;登入驗證該密碼(改31)
[checkLoginPwd] 
sql = "select `USERNAME`,`USER_ID`,`D_ID`,`RIGHTS`,`EMAIL` from user a where a.EMAIL = ? and binary a.USERPSW = ?"

;鎖定使用者(改31)
[LockAccount] 
sql = "update `user` set `LOCKED`='1', `LAST_DATE`=?, `EDITOR`=? where `EMAIL`=? "

;解除鎖定使用者(改31)
[unLockAccount] 
sql = "update `user` set `LOCKED`='0', `LAST_DATE`=?, `EDITOR`=? where `EMAIL`=? "

;解除鎖定使用者
[updateLoginLog] 
sql = "update `userlog` set `login_status`='S', `LAST_DATE`=?, `EDITOR`=? where `USER_ID`=? and `login_status`='F'"

;登入紀錄
[loginlog] 
sql = "insert into `login_log` (`usercode`, `local_ip`, `local_ip_xforwardfor`, `login_datetime`, `login_status`, `forgetpsd`, `CREATE_DATE`, `BUILDER`) VALUES (?, ?, ?, ?, ?, ?, ?, ?)"



;登入紀錄列表
[loginrecord] 
sql = "select * from login_log order by login_datetime"

;更新錯誤次數
[upadtePwdError] 
sql = "update `userlog` set `forgetpsd` = ?, `LAST_DATE`=?, `EDITOR`=? where `login_status`='F' and `USER_ID`=?"

;密碼錯誤次數
[pwdError] 
sql = "select `forgetpsd` from `userlog` where `login_status`='F' and `USER_ID`=?"

;帳號列表
[accountlist] 
sql = "select * from user order by BUILD_DATE"

;單一帳號
[loadUserEvent] 
sql = "select * from user where `USER_ID` = ?"

;新增帳號
[addAccount] 
sql = "insert into `user` (`USER_ID`,`USERNAME`,`USERPSW`,`EXTENSION`, `EMAIL`,`S_ID`,`D_ID`,`RIGHTS`, `BUILDER`,`BUILD_DATE`, `LAST_DATE`, `EDITOR`, `LOCKED`) VALUES
(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ,?)"

;使用者人數(31)
[countUser]
sql = "select COUNT(USER_ID) as USERTATAL  from user"

;修改帳號
[editAccount] 
sql = "update `user` set `USERNAME` = ?,`USERPSW` = ?,`EXTENSION` = ?,`S_ID` = ?,`D_ID` = ?,`RIGHTS` = ?,`LAST_DATE` = ?,`EDITOR` = ? where `USER_ID` = ?"

;使用者修改帳號
[user_editAccount] 
sql = "update `user` set `USERPSW` = ?,`EXTENSION` = ?,`LAST_DATE` = ?,`EDITOR` = ? where `USER_ID` = ?"

;刪除帳號
[deleteAccount] 
sql = "delete from user where `USER_ID` = ?"

;payment列表
[paymentlist] 
sql = "select * from `transation` order by create_date desc"

;load single payment info
[loadpayment] 
sql = "select * from `transation` where id=?"

;撈出第一層分支資料內容  //1001賴
[load_first_branch]
sql = "SELECT (@i:=@i+1) num,CONCAT(ser,'-',`branch_content`) AS id_content,mind_map.* FROM `mind_map` , (SELECT @i:= 0) AS num where `level` = '1'"

;新增第一層分支內容資料  //1001賴
[add_first_map]
sql = "INSERT INTO `mind_map`(`branch_content`, `level`, `CREATE_DATE`, `BUILDER`, `LAST_DATE`, `EDITOR`) VALUES (?,?,?,?,?,?)"

;以ser撈出分支資料內容  //1001賴
[loadbranch]
sql = "SELECT * FROM `mind_map` WHERE `ser` = ?"

;修改第一層分支內容  //1001賴
[editfirstbranch]
sql = "UPDATE `mind_map` SET `branch_content`= ?,`LAST_DATE`= ?,`EDITOR`= ? WHERE `ser` = ?"

;刪除第一層分支內容  //1001賴
[deletebranch]
sql = "DELETE FROM `mind_map` WHERE `ser` = ?"

;撈出第二層分支資料內容  //1001賴
[load_second_branch]
sql = "SELECT (@i:=@i+1) num,CONCAT(ser,'-',`branch_content`) AS id_content,mind_map.* FROM `mind_map` , (SELECT @i:= 0) AS num where `level` = '2' and `b_ser` = ?"

;新增第二、三、四層分支內容資料  //1001賴
[add_other_map]
sql = "INSERT INTO `mind_map`(`branch_content`, `level`,`b_ser`, `CREATE_DATE`, `BUILDER`, `LAST_DATE`, `EDITOR`) VALUES (?,?,?,?,?,?,?)"

;列出分支圖導覽列  //1001賴
[loadtop_class] 
sql = "SELECT CONCAT(p.ser,'-',p.branch_content) AS third_itemno,CONCAT(s.ser,'-',s.branch_content) AS second_itemno,CONCAT(y.ser,'-',y.branch_content) AS first_itemno from mind_map as p left join mind_map as s on p.b_ser = s.ser left join mind_map as y on s.b_ser = y.ser where p.ser = ?"

;撈出第三層分支資料內容  //1001賴
[load_third_branch]
sql = "SELECT (@i:=@i+1) num,CONCAT(ser,'-',`branch_content`) AS id_content,mind_map.* FROM `mind_map` , (SELECT @i:= 0) AS num where `level` = '3' and `b_ser` = ?"

;撈出第四層分支資料內容  //1001賴
[load_branch_des]
sql = "SELECT (@i:=@i+1) num,mind_map.* FROM `mind_map` , (SELECT @i:= 0) AS num where `level` = '4' and `b_ser` = ?"

;撈出分支測驗問題資料內容  //1015揚
[load_branch_quest]
sql = "SELECT (@i:=@i+1) num,CONCAT(ser,'-',`question`) AS id_content ,ser,EDITOR,LAST_DATE FROM `branchquest` , (SELECT @i:= 0) AS num  where `branch` = ?"

;新增分支問題內容資料  //10015 揚
[add_branch_quest]
sql = "INSERT INTO `branchquest`( `question`,`branch`,`isselection`,`CREATE_DATE`,`BUILDER`,`LAST_DATE`,`EDITOR`) VALUES (?,?,?,?,?,?,?)"

;根據問題內容撈出Question ser //1018jiang
[load_quest_and_options]
sql ="SELECT `branchquest`.`question`, `branchoptions`.`options`,`branchoptions`.`isanswer`,`branchoptions`.`ser` AS `options_ser`
FROM `branchquest` INNER JOIN `branchoptions` ON `branchquest`.`ser` = `branchoptions`.`quest_ser` 
WHERE  `branchquest`.`ser` =  ?" 

;根據問題內容撈出Question ser //1018jiang
[get_quest_ser]
sql ="SELECT `ser` FROM `branchquest` WHERE  `question` =  ?" 

;新增分支問題內容資料  //10019 揚
[add_branch_options]
sql = "INSERT INTO `branchoptions` (`options`,`isanswer`,`quest_ser`) VALUES (?,?,?)"

;修改分支測驗問題
[editbranchquest]
sql = "UPDATE `branchquest` SET `question`= ?,`isselection`= ?,`LAST_DATE`= ?,`EDITOR`= ? WHERE `ser` = ?"

;修改分支測驗問題
[editbranchoptions]
sql = "UPDATE `branchoptions` SET `options`= ? ,`isanswer`=?   WHERE `ser` = ?"

;刪除分支測驗問題內容  //1019jiyang
[deletebranch_question]
sql = "DELETE FROM `branchquest` WHERE `ser` = ?"

;刪除分支測驗選項內容  //1001 jiynag
[deletebranch_options]
sql = "DELETE FROM `branchoptions` WHERE `quest_ser` = ?"

;ar臉部列表
[arfacelist] 
sql = "select * from ar_face order by ser"

;新增ar臉部
[addARface] 
sql = "insert into `ar_face` (`drug_name`, `drug_info`,`pic_address`,`ar_mode`) VALUES(?, ?,?,?)"

;刪除ar臉部
[deleteARface] 
sql = "delete from `ar_face` where `ser` = ?"

;載入單一ar臉部
[loadARface] 
sql = "select * from `ar_face` where `ser` = ?"

;修改ar臉部
[editARface] 
sql = "update `ar_face` set `drug_name` = ?,`drug_info` = ?,`pic_address`=? ,`ar_mode`=? where `ser` = ?"

;單一ar臉部
[find_pic_address] 
sql = "select `pic_address` from `ar_face` where `ser` = ?"

;新增RPG角色
[add_role] 
sql = "INSERT INTO `rpg_role`( `code`, `role`, `name`) VALUES (?,?,?)"

;列出RPG角色
[rolelist] 
sql = "SELECT * FROM `rpg_role`"

;列出某個RPG角色
[loadrole] 
sql = "SELECT * FROM `rpg_role` where ser = ?"

;修改某個RPG角色 不包括圖片
[editrole] 
sql = "UPDATE `rpg_role` SET `code`= ?,`name`= ? WHERE ser = ? "

;修改某個RPG角色 包括圖片
[editrole2] 
sql = "UPDATE `rpg_role` SET `code`=?,`role`=?,`name`=? WHERE `ser` = ?"

;刪除某個RPG角色
[deleterole] 
sql = "DELETE FROM `rpg_role` WHERE `ser` = ?"

;新增RPG場景
[add_bg] 
sql = "INSERT INTO `rpg_background`(`code`, `background`, `name`) VALUES (?,?,?)"

;列出RPG場景
[bglist] 
sql = "SELECT * FROM `rpg_background`"

;列出某個RPG場景
[loadbg] 
sql = "SELECT * FROM `rpg_background` where ser = ?"

;修改某個RPG場景 不包括圖片
[editbg] 
sql = "UPDATE `rpg_background` SET `code`= ?,`name`= ? WHERE ser = ? "

;修改某個RPG場景 包括圖片
[editbg2] 
sql = "UPDATE `rpg_background` SET `code`=?,`background`=?,`name`=? WHERE `ser` = ?"

;刪除某個RPG場景
[deletebg] 
sql = "DELETE FROM `rpg_background` WHERE `ser` = ?"

;新增RPG測驗題目
[add_quest] 
sql = "INSERT INTO `rpg_quest`(`qnum`,`content`, `c_group`) VALUES (?,?,?)"

;獲取新建RPG測驗ser值
[loadnew_quest] 
sql = "SELECT * FROM `rpg_quest` WHERE `content` = ? and `c_group` = ?"

;新增RPG測驗選項
[add_option] 
sql = "INSERT INTO `rpg_options`(`qser`, `content`, `attribute`, `nextquest`) VALUES (?,?,?,?)"

;新增RPG測驗選項
[quest_list] 
sql = "select rpg_quest.*,CONCAT(c_group,'-',`content`) AS group_con from `rpg_quest`"

;列出某個RPG測驗題目
[loadquest] 
sql = "SELECT * FROM `rpg_quest` where qnum = ?"

;列出某個RPG測驗選項
[loadoption] 
sql = "SELECT * FROM `rpg_options` where qser = ?"

;修改某個RPG測驗題目
[ed_quest] 
sql = "UPDATE `rpg_quest` SET `qnum`= ? ,`content`= ? ,`c_group`= ? WHERE `qnum` = ?"

;刪除某個RPG測驗題目選項
[del_option] 
sql = "DELETE FROM `rpg_options` WHERE `qser` = ?"

;刪除某個RPG測驗題目
[deletequest] 
sql = "DELETE FROM `rpg_quest` WHERE `qnum` = ?"